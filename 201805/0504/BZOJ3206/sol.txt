又是一道很巧妙的题目，关键点在于看清楚题目。

首先注意到每条边的边权不同，因此在没有新边时，MST是固定的。
又发现新边很少，回想起动态维护MST时我们的做法，我们可以考虑缩图。
这样将新边设为-INF，我们做MST后，在MST上的原图边一定会出现在我们最后的选择中。
接着将所有新边去掉进行缩点，图变成了至多k+1个联通块，同时我们可以缩边，这样最多有400条边。
用这些边再做一次MST，就能将边数缩成k。

接下来我们要做的就是确定新边的边权，但是发现我们不一定选新边建MST会最优，所以我们还要枚举一个边集。
考虑枚举边集后我们结合原图中的边作MST，那么如果我们新加进一条边时，如果形成了一个环，则这条边会对环上所有未确定边权的边产生一个限制。
这样如果我们暴力更新环上所有边的话的话，后半部分的复杂度是$O(2^k*k^2)$的，算起来过不了，实际上能过。

但实际上这个做法还可以得到优化，我们发现要优化关键在于减少边权的更新。
我们可以对所有原图边按边权从小到大进行编号，这样如果我们知道一条新边会被哪些原图边算入环，我们就可以O1得到限制（lowbit一下）。
然后对于每条原图不在MST上的边(u,v)，我们在u和v上都打一个编号标记，
对于每个节点，我们知道它有一些标记，那么它的父边就会被这些标记代表的边贡献到。
回溯时，我们将这个节点的标记异或上所有它儿子节点的标记就可以了（可以画图验证）
这样子后半部分的复杂度就是$O(2^k*k^2)$，可以完美通过此题。

对了前面缩图，MST之类的复杂度应该就是$O(mlogm)$之类的吧，不会超过后面的复杂度。