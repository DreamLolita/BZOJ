这道题真是一道很不错的数据结构题，想了茫茫久......当然应该是因为我太弱了。
首先离散化什么的就不用多说了。
我们考虑能看见一个矩形的条件，如果我们按x轴做扫描线，那么实际上就是要看这个矩形是否在某一个x上有出现过。
怎么样才能让它出现呢？显然就是比它后的矩形在这个x上没有将它覆盖掉。
那么问题就转化为维护一个区间最大值的数据结构，我们上线段树就可以了。
考虑对于当前的x，可能同时可以看到多个颜色，因此在得到一个最大值以后，我们需要从下面将最大值更新，得到另一个颜色。
我们设计这样的标记：mx和mn，mx表示当前区间能看到的编号最大且未统计答案的颜色，mn表示当前区间覆盖的最小的颜色。
为了更新，我们还要维护一个存储当前区间所有为统计答案颜色的数据结构，且支持删除一个给定值、取出一个最大值，这个用堆就可以了，记为q。
那么now_mx=max(ls_mx,rs_mx,q_mx),now_mn=max(min(ls_mn,rs_mn),q_mx)
显然当mx<mn时，说明当前区间已经没有可以统计答案的颜色了，我们可以移动扫描线。
总的时间复杂度是$O(nlog^2n)$的
