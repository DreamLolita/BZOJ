这题显然就是一个斜率优化的dp，然后分治的时候维护一下凸壳，但是我写了很久
首先考虑暴力的dp怎么做
$f[i]$表示保留旧房子$i$时，$1～i$最多能保留多少个旧房子
$g[i]$表示$f[i]$为最优决策时,$1～i$的最小总花费
然后我们有dp式
$$f[i]=\max\{f[j]+1\} (j=0..i-1,a[i]-a[j]\geq i-j)$$
$$g[i]=\min\{\frac {(2*a[j]+i-j)*(i-j-1)} 2 +g[j]\} +a[i]+b[i]$$

$f$的优化显然，接下来考虑对$g$的优化，去掉后面的$i$相关常数可以得到。
$$i*(a[j]-j)+\frac {i*(i-1)} 2+(\frac {j(j+1)} 2-j*a[j]-a[j]+g[j])$$
然后这就是一个斜率优化的形式，我们把这个东西写得简单一点。
设$c[i]=g[i]+\frac{i(i+1)}{2}-a[i]\times i-a[i]，d[i]=a[i]-i$
最终我们可以得到：
$$g[i]=min(i\times d[j]+c[j])+b[i]+a[i]+\frac {i(i-1)} 2，j<i,f[j]+1=f[i]且d[j]\leq d[i]$$
去掉关于$i$的常数后就是每次插入一个点$(d[i],c[i])$转移的时候拿斜率$-i$的直线卡最小截距。

这个东西怎么实现呢？分治！
处理左半边对右半边的影响就是按照$d[i]$排序，然后插入斜率。
因为插入顺序单调，所以我们只需要维护一个下凸壳，查询时在凸壳上三分。
时间复杂度$O(nlog^2n)$