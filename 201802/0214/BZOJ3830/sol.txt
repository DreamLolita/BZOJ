首先这些车肯定是分批的，然后我们就可以dp了。
令$f[i]$表示前$i$辆车全部回来的最少时间，那么有：
$$f[i]=max(f[j]+i-j-1,A[i])+2\cdot s+i-j-1 $$
然后$f$数组显然是单调递增的，所以$f[j]+i-j-1$也是单调递增的，就分段：
$$f[i]=\begin{cases} f[j]+i-j-1+2\cdot s+i-j-1, & f[j]+i-j-1>A[i]\\ A[i]+2\cdot s+i-j-1, & f[j]+i-j-1<=A[i] \end{cases}$$

对于下面那部分，要使$j$最大，可以直接在$f$数组里面二分，然后上面那部分就是求一个$[j,i)$的$min$，可以数据结构维护。
但实际上上面的部分有决策单调性qwq，然后决策点单调前移，所以就可以$O(n)$了
 
